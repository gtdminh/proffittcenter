/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SkuN.java
 *
 * Created on 15-Mar-2009, 06:03:25
 */
package proffittcenter;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;

/**
 *
 * @author HP_Owner
 */
public class Sku_1 extends EscapeDialog {

    private int sku;
    private String department;
    private int tax1;
    private short type;
    //private String supplier;
    private static ResourceBundle bundle = ResourceBundle.getBundle("proffittcenter/resource/Sku");
    private Preferences root = Preferences.userNodeForPackage(getClass());
    private boolean stopped;
    private int quantity;
    private int oldQuantity=0;
    private static String saleInsert1 = "INSERT INTO " +
            " Sales(ID,Operator,Customer,Total,Tax,Cash,Cheque,Debit,Coupon," +
            "TillId,Waste ) VALUES(?,?,";
    private static String saleInsert2 = ",0,0,0,0,0,0," + Main.shop.getTillId() + ",?)";
    private static String lastSale = "SELECT LAST_INSERT_ID() FROM Sales";
    private int sale;
    private static String insertSaleLine = "INSERT INTO SaleLines " +
            "(ID,Sale,Quantity,Product,Price)" +
            "VALUES(?,?,?,?,?)";
    private int tax2;

    /** Creates new form SkuN */
    public Sku_1(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSearchTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSkuTextField = new javax.swing.JTextField();
        c = new javax.swing.JTextField();
        jQuantityTextField = new javax.swing.JTextField();
        jDepartmentCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tax1ComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jMinimumTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jShelfRentTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTypeCombo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        tax2ComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("proffittcenter/resource/Sku"); // NOI18N
        setTitle(bundle.getString("Sku.title")); // NOI18N
        setName("Sku"); // NOI18N

        jSearchTextField.setName("jSearchTextField"); // NOI18N
        jSearchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSearchTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSearchTextFieldFocusLost(evt);
            }
        });

        jPanel1.setName("Sku"); // NOI18N

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/Close24.png"))); // NOI18N
        closeButton.setBorderPainted(false);
        closeButton.setContentAreaFilled(false);
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        closeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                closeButtonKeyReleased(evt);
            }
        });

        updateBtn.setText(bundle.getString("Sku.updateBtn.text")); // NOI18N
        updateBtn.setName("updateBtn"); // NOI18N
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(608, Short.MAX_VALUE)
                .addComponent(updateBtn)
                .addGap(18, 18, 18)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel1.setText(bundle.getString("Sku.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(bundle.getString("Sku.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel16.setText(bundle.getString("Sku.jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        jSkuTextField.setEditable(false);
        jSkuTextField.setName("jSkuTextField"); // NOI18N

        c.setEditable(false);
        c.setText("null");
        c.setName("c"); // NOI18N

        jQuantityTextField.setEditable(false);
        jQuantityTextField.setText("null");
        jQuantityTextField.setName("jQuantityTextField"); // NOI18N
        jQuantityTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jQuantityTextFieldFocusGained(evt);
            }
        });

        jDepartmentCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jDepartmentCombo.setName("jDepartmentCombo"); // NOI18N

        jLabel3.setText(bundle.getString("Sku.jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(bundle.getString("Sku.jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        tax1ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tax1ComboBox.setName("tax1ComboBox"); // NOI18N

        jLabel5.setText(bundle.getString("Sku.jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jMinimumTextField.setName("jMinimumTextField"); // NOI18N
        jMinimumTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jMinimumTextFieldFocusGained(evt);
            }
        });

        jLabel6.setText(bundle.getString("Sku.jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jShelfRentTextField.setName("jShelfRentTextField"); // NOI18N
        jShelfRentTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jShelfRentTextFieldFocusGained(evt);
            }
        });

        jLabel7.setText(bundle.getString("Sku.jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jTypeCombo.setName("jTypeCombo"); // NOI18N

        jLabel9.setText(bundle.getString("Sku.jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jCheckBox1.setText(bundle.getString("jCheckBox1")); // NOI18N
        jCheckBox1.setName("jCheckBox1"); // NOI18N

        jLabel8.setText(bundle.getString("Sku.jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        tax2ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tax2ComboBox.setName("tax2ComboBox"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(103, 103, 103)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(tax1ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jSkuTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jMinimumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(c, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jShelfRentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE))
                                    .addComponent(jTypeCombo, 0, 204, Short.MAX_VALUE)
                                    .addComponent(jDepartmentCombo, 0, 204, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(74, 74, 74)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1)
                                    .addComponent(jLabel3)
                                    .addComponent(jSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(tax2ComboBox, 0, 98, Short.MAX_VALUE))
                        .addGap(637, 637, 637))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSkuTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tax1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jShelfRentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jMinimumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDepartmentCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tax2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_closeButtonKeyReleased
//        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
//            AudioPlayer.play("Beep");
//            this.setVisible(false);
//        }
}//GEN-LAST:event_closeButtonKeyReleased

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        tax1 = (tax1ComboBox.getSelectedIndex()-1);
        tax2 = (tax2ComboBox.getSelectedIndex()-1);
        if (sku > 2) {//do not modify first two
            try {
                quantity=Integer.parseInt(StringOps.numericOnly(jQuantityTextField.getText()));
                PreparedStatement ps = Main.getConnection().prepareStatement(
                        "UPDATE Skus SET " +
                        "WhenCreated=NULL," +
                        "Department=(SELECT ID FROM Departments " +
                        "WHERE Description=?)," +
                        "Tax=?," +
                        "Minimum=?," +
                        "StockType=?," +
                        "ShelfRent=?," +
                        "Stopped=?, " +
                        "Tax2=? " +
                        "WHERE ID=?");
                department = (String) jDepartmentCombo.getSelectedItem();
                ps.setString(1, department);
                tax1 = (tax1ComboBox.getSelectedIndex()+1);
                ps.setInt(2, tax1);
                ps.setString(3, StringOps.numericOnly(jMinimumTextField.getText()));
                type = (short) (jTypeCombo.getSelectedIndex()-1);
                ps.setShort(4, type);
                ps.setString(5, StringOps.numericOnly(jShelfRentTextField.getText()));
                stopped=jCheckBox1.isSelected();
                ps.setBoolean(6, stopped);
                tax2 = (tax2ComboBox.getSelectedIndex()+1);
                ps.setInt(7, tax2);
                ps.setInt(8, sku);
                ps.executeUpdate();
                Audio.play("Beep");
            } catch (SQLException ex) {
                Audio.play("Ring");
                Logger.getLogger(Sku_1.class.getName()).log(Level.SEVERE, null, ex);
                setVisible(false);
            }
        } else {
            Audio.play("Ring");
        }
        setVisible(false);
}//GEN-LAST:event_updateBtnActionPerformed

    public boolean execute(int sku) {
        try {
            //fill the items from the SkuType table
            updateBtn.setEnabled(false);
            jTypeCombo.removeAllItems();
            jTypeCombo.addItem("");
            //fill in all possible kinds
            for (short cnt = 0; cnt < SkuType.size(); cnt++) {
                String s = SkuType.description(cnt);
                jTypeCombo.addItem(s);
            }
            //fill the items from the departments table
            jDepartmentCombo.removeAllItems();
            jDepartmentCombo.addItem("");
            try {
                PreparedStatement departmentsQuery = Main.getConnection().prepareStatement(
                        "SELECT Departments.Description FROM Departments " +
                        "ORDER BY Departments.Description");
                ResultSet rs = departmentsQuery.executeQuery();
                if (rs.first()) {//not if empty
                    do {//departments to display
                        String S = rs.getString("Description");
                        jDepartmentCombo.addItem(S);
                    } while (rs.next());
                }
                rs.close();
                jDepartmentCombo.setSelectedItem((Object) department);
            } catch (SQLException ex) {
                Audio.play("Ring");
                Logger.getLogger(Sku_1.class.getName()).log(Level.SEVERE, null, ex);
            }
            //fill the items
            PreparedStatement taxQuery =
                        Main.getConnection().prepareStatement(
                                "SELECT Description FROM TAXES ORDER BY ID");
                ResultSet rst = taxQuery.executeQuery();
                tax1ComboBox.removeAllItems();
                tax2ComboBox.removeAllItems();
                while (rst.next()) {
                    tax1ComboBox.addItem(rst.getString("Description"));
                    tax2ComboBox.addItem(rst.getString("Description"));
                }
                rst.close();
            this.sku = sku;
            //if zero, or less show blank screen
            if (sku <= 0) {
                //set all fields to empty
                jSearchTextField.setText("");
                jSkuTextField.setText("");
                c.setText("");
                jQuantityTextField.setText("");
                oldQuantity=0;
                jMinimumTextField.setText("");
                jShelfRentTextField.setText("");
                jCheckBox1.setSelected(false);
            } else {
                //need to look up details
                if (sku < 0) {
                    return false;
                }
                try {
                    PreparedStatement skuLookup = Main.getConnection().prepareStatement(
                            "SELECT Skus.*," +
                            "Departments.Description,Suppliers.Description " +
                            "FROM Skus,Departments,suppliers " +
                            "WHERE Skus.ID=? " +
                            "AND Skus.Department=Departments.ID ");
                    skuLookup.setInt(1, sku);
                    ResultSet rs = skuLookup.executeQuery();
                    if (!rs.first()) {//no product
                        rs.close();
                        return false;
                    }
                    updateBtn.setEnabled(true);
                    jSkuTextField.setText("" + rs.getInt("Skus.ID"));
                    c.setText("" + rs.getDate("WhenCreated"));
                    jSearchTextField.setText("");
                    oldQuantity=rs.getInt("Quantity");
                    jQuantityTextField.setText("" + oldQuantity);
                    jMinimumTextField.setText("" + rs.getInt("Minimum"));
                    jShelfRentTextField.setText("" + rs.getInt("ShelfRent"));
                    tax1 = rs.getInt("Skus.Tax");//test
                    tax1ComboBox.setSelectedIndex(rs.getInt("Skus.Tax")-1);
                    tax2 = rs.getInt("Skus.Tax2");//test
                    tax2ComboBox.setSelectedIndex(rs.getInt("Skus.Tax2")-1);
                    type = (short) (rs.getShort("StockType") );
                    jTypeCombo.setSelectedIndex(type);
                    department = rs.getString("Departments.Description");
                    jDepartmentCombo.setSelectedItem(department);
                    stopped=rs.getInt("Stopped")==1;
                    jCheckBox1.setSelected(stopped);
                    rs.close();
                    jTypeCombo.setSelectedItem((Object) (SkuType.description((short) type)));
                } catch (SQLException ex) {
                    Audio.play("Ring");
                    setVisible(false);
                    Logger.getLogger(Sku_1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            jDepartmentCombo.requestFocus();
            this.pack();
            jSearchTextField.requestFocus();
            Audio.play("Tada");
            setVisible(true);
            return true;
        } catch (SQLException ex) {
            Logger.getLogger(Sku_1.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    private void jSearchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSearchTextFieldFocusGained
        jSearchTextField.selectAll();
    }//GEN-LAST:event_jSearchTextFieldFocusGained

    private void jQuantityTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jQuantityTextFieldFocusGained
        jQuantityTextField.selectAll();
    }//GEN-LAST:event_jQuantityTextFieldFocusGained

    private void jMinimumTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jMinimumTextFieldFocusGained
        jMinimumTextField.selectAll();
    }//GEN-LAST:event_jMinimumTextFieldFocusGained

    private void jShelfRentTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jShelfRentTextFieldFocusGained
        jShelfRentTextField.selectAll();
    }//GEN-LAST:event_jShelfRentTextFieldFocusGained

    private void jSearchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSearchTextFieldFocusLost
       int n=0;
        String s=jSearchTextField.getText();
        try {
                if(s.isEmpty())return;
                n = Integer.parseInt(s);
            } catch (NumberFormatException ex) {
                //not a number
                jSearchTextField.setText("");
                Audio.play("Ring");
                return;
            }
            Audio.play("Beep");
            this.sku = n;
            //if zero, or less show blank screen
            if (sku <= 0) {
                //set all fields to empty
                jSearchTextField.setText("");
                jSkuTextField.setText("");
                c.setText("");
                jQuantityTextField.setText("");
                oldQuantity=0;
                jMinimumTextField.setText("");
                jShelfRentTextField.setText("");
            } else {
                //need to look up details
                if (sku < 0) {
                    return ;
                }
                try {
                    PreparedStatement skuLookup = Main.getConnection().prepareStatement(
                            "SELECT Skus.*," +
                            "Departments.Description,Suppliers.Description " +
                            "FROM Skus,Departments,suppliers " +
                            "WHERE Skus.ID=? " +
                            "AND Skus.Department=Departments.ID ");
                    skuLookup.setInt(1, sku);
                    ResultSet rs = skuLookup.executeQuery();
                    if (!rs.first()) {//no product
                        rs.close();
                        updateBtn.setEnabled(true);
                        jSkuTextField.setText("" );
                        c.setText("" );
                        jSearchTextField.setText("");
                        jQuantityTextField.setText("");
                        jMinimumTextField.setText("");
                        jShelfRentTextField.setText("");
                        tax1 = 0;//test
                        tax1ComboBox.setSelectedIndex(0);
                        tax2 = 0;//test
                        tax2ComboBox.setSelectedIndex(0);
                        type = 0;
                        jTypeCombo.setSelectedIndex(0);
                        department = "";
                        jDepartmentCombo.setSelectedItem(department);
                        stopped=rs.getInt("Stopped")==1;
                        jCheckBox1.setSelected(stopped);
                        rs.close();
                        updateBtn.setEnabled(false);
                        jSearchTextField.requestFocus();
                        return;
                    }
                    updateBtn.setEnabled(true);
                    jSkuTextField.setText("" + rs.getInt("Skus.ID"));
                    c.setText("" + rs.getDate("WhenCreated"));
                    jSearchTextField.setText("");
                    oldQuantity=rs.getInt("Quantity");
                    jQuantityTextField.setText("" + oldQuantity);
                    jMinimumTextField.setText("" + rs.getInt("Minimum"));
                    jShelfRentTextField.setText("" + rs.getInt("ShelfRent"));
                    //caseSizeTextField.setText("" + rs.getInt("CaseSize"));
                    tax1 = rs.getInt("Skus.Tax");//test
                    tax1ComboBox.setSelectedIndex(tax1+1);
                    tax2 = rs.getInt("Skus.Tax2");//test
                    tax2ComboBox.setSelectedIndex(tax2+1);
                    type = rs.getShort("StockType");
                    jTypeCombo.setSelectedIndex(type);
                    department = rs.getString("Departments.Description");
                    jDepartmentCombo.setSelectedItem(department);
                    stopped=rs.getInt("Stopped")==1;
                    jCheckBox1.setSelected(stopped);
                    rs.close();
                    jTypeCombo.setSelectedItem((Object) (SkuType.description((short) type)));
                } catch (SQLException ex) {
                    Audio.play("Ring");
                    setVisible(false);
                    Logger.getLogger(Sku_1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        jSearchTextField.requestFocus();
        
    }//GEN-LAST:event_jSearchTextFieldFocusLost

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Sku_1 dialog = new Sku_1(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField c;
    private javax.swing.JButton closeButton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jDepartmentCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jMinimumTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jQuantityTextField;
    private javax.swing.JTextField jSearchTextField;
    private javax.swing.JTextField jShelfRentTextField;
    private javax.swing.JTextField jSkuTextField;
    private javax.swing.JComboBox jTypeCombo;
    private javax.swing.JComboBox tax1ComboBox;
    private javax.swing.JComboBox tax2ComboBox;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
