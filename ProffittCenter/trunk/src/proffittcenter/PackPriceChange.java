/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PackPriceChange.java
 *
 * Created on 02-May-2010, 12:10:21
 */

package proffittcenter;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;

/**
 *
 * @author HP_Owner
 */
public class PackPriceChange extends EscapeDialog {


    private int packPrice;
    private int id;
    private int packSupplier;
    private Preferences root = Preferences.userNodeForPackage(getClass());

    /** Creates new form PackPriceChange
     * @param parent
     * @param modal
     */
    public PackPriceChange(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getRootPane().setDefaultButton(okButton);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        oldPriceText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        newPriceText = new javax.swing.JTextField();
        closeButton2 = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("proffittcenter/resource/PackPriceChange"); // NOI18N
        setTitle(bundle.getString("title")); // NOI18N
        setIconImage(null);
        setIconImages(null);
        setName("PackPriceChange"); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("proffittcenter/resource/PriceChange"); // NOI18N
        jLabel1.setText(bundle1.getString("PriceChange.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        oldPriceText.setEditable(false);
        oldPriceText.setText(bundle1.getString("PriceChange.oldPriceText.text")); // NOI18N
        oldPriceText.setName("oldPriceText"); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(bundle1.getString("PriceChange.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        newPriceText.setText(bundle1.getString("PriceChange.newPriceText.text")); // NOI18N
        newPriceText.setName("newPriceText"); // NOI18N
        newPriceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newPriceTextKeyReleased(evt);
            }
        });

        closeButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/Close24.png"))); // NOI18N
        closeButton2.setContentAreaFilled(false);
        closeButton2.setName("closeButton2"); // NOI18N
        closeButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButton2ActionPerformed(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/OK.png"))); // NOI18N
        okButton.setContentAreaFilled(false);
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(oldPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(newPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(oldPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(newPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void execute(int packSupplier) {
        this.packSupplier=packSupplier;
        try {
            PreparedStatement productLookup = Main.getConnection().prepareStatement(
                    "SELECT PackSuppliers.* FROM PackSuppliers WHERE PackSuppliers.ID=? ");
            productLookup.setLong(1, packSupplier);
            ResultSet rs = productLookup.executeQuery();
            if (!rs.first()) {
                rs.close();
            } else {
                packPrice = rs.getInt("Price");
                oldPriceText.setText((new Money(packPrice)).toString());
                newPriceText.setText((new Money(packPrice)).toString());
                rs.close();
                newPriceText.requestFocus();
                //FormRestore.createPosition(this, root);
                setVisible(true);
                //FormRestore.destroyPosition(this, root);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PackPriceChange.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

     public void execute(int packSupplier,int oldPrice) {
        this.packSupplier=packSupplier;
        try {
            PreparedStatement productLookup = Main.getConnection().prepareStatement(
                    "SELECT PackSuppliers.* FROM PackSuppliers WHERE PackSuppliers.ID=? ");
            productLookup.setLong(1, packSupplier);
            ResultSet rs = productLookup.executeQuery();
            if (!rs.first()) {
                rs.close();
            } else {
                packPrice = rs.getInt("Price");
                oldPriceText.setText((new Money(packPrice)).toString());
                rs.close();
                newPriceText.requestFocus();
                //FormRestore.createPosition(this, root);
                setVisible(true);
                //FormRestore.destroyPosition(this, root);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PackPriceChange.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void newPriceTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPriceTextKeyReleased
        Money.asMoney(newPriceText);
}//GEN-LAST:event_newPriceTextKeyReleased

    private void closeButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButton2ActionPerformed
        setVisible(false);
}//GEN-LAST:event_closeButton2ActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        try {
            if(StringOps.numericOnly(newPriceText.getText()).isEmpty()){
                newPriceText.requestFocus();
                return;
            }
            PreparedStatement productSave = Main.getConnection().prepareStatement(
                    "UPDATE PackSuppliers SET Price=? WHERE ID=? ");
            packPrice=Integer.parseInt(StringOps.numericOnly(newPriceText.getText()));
            if(packPrice==0) {
                return;
            }
            productSave.setInt(1,packPrice);
            productSave.setInt(2, packSupplier);
            productSave.execute();
            Audio.play("Beep");
        } catch (SQLException ex) {
            Audio.play("Ring");
            Logger.getLogger(PackPriceChange.class.getName()).log(Level.SEVERE, null, ex);
        }
        setVisible(false);
}//GEN-LAST:event_okButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PackPriceChange dialog = new PackPriceChange(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField newPriceText;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField oldPriceText;
    // End of variables declaration//GEN-END:variables

}
