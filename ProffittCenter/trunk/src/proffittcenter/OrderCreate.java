/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OrderCreateEscape.java
 *
 * Created on 01-Nov-2009, 16:46:01
 */

package proffittcenter;

import java.sql.*;
import java.util.prefs.Preferences;
import javax.swing.JRootPane;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Calendar;

/**
 *
 * @author HP_Owner
 */
public class OrderCreate extends EscapeDialog {

    Preferences root = Preferences.userNodeForPackage(getClass());
    int supplier;
    int daysNumber;
    int daysToNextDelivery;
    public Thread orderThread;

    /** Creates new form OrderCreateEscape */
    public OrderCreate(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Main.mainHelpBroker.enableHelpKey(getRootPane(), "Ordercreate", Main.mainHelpSet);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        supplierText = new javax.swing.JTextField();
        daysSpareText = new javax.swing.JTextField();
        weeksCreditText = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        nextDeliveryDateChooser = new com.toedter.calendar.JDateChooser();
        deliveryDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("proffittcenter/resource/OrderGenerate"); // NOI18N
        setTitle(bundle.getString("title")); // NOI18N
        setName("ordercreate"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("proffittcenter/resource/OrderCreate"); // NOI18N
        jLabel1.setText(bundle1.getString("OrderCreate.jLabel1.text_1")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(bundle1.getString("OrderCreate.jLabel2.text_1")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText(bundle1.getString("OrderCreate.jLabel3.text_1")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(bundle1.getString("OrderCreate.jLabel4.text_1")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        supplierText.setEditable(false);
        supplierText.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        supplierText.setName("supplierText"); // NOI18N

        daysSpareText.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        daysSpareText.setName("daysSpareText"); // NOI18N
        daysSpareText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                daysSpareTextKeyReleased(evt);
            }
        });

        weeksCreditText.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        weeksCreditText.setName("weeksCreditText"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/Close24.png"))); // NOI18N
        closeButton.setContentAreaFilled(false);
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        closeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                closeButtonKeyReleased(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/OK.png"))); // NOI18N
        okButton.setContentAreaFilled(false);
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(320, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okButton, 0, 0, Short.MAX_VALUE)
                    .addComponent(closeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText(bundle1.getString("OrderCreate.jLabel5.text_1")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        nextDeliveryDateChooser.setName("nextDeliveryDateChooser"); // NOI18N

        deliveryDateChooser.setName("deliveryDateChooser"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(weeksCreditText, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(daysSpareText, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nextDeliveryDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(supplierText, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                    .addComponent(deliveryDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(45, 45, 45)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplierText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(daysSpareText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deliveryDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextDeliveryDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weeksCreditText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void execute(int supplier) {
        this.supplier = supplier;
        //locate description of supplier in Suppliers
        PreparedStatement supplierName;
        try {
            supplierName = Main.getConnection().prepareStatement(
                    "SELECT *,DeliveryDays+0 AS D FROM Suppliers " + //+0 turns set into int
                    "WHERE ID=?");
            supplierName.setInt(1, supplier);
            ResultSet rs = supplierName.executeQuery();
            if (rs.first()) {
                supplierText.setText(rs.getString("Description"));
                daysSpareText.setText(rs.getString("DaysSpare"));
                weeksCreditText.setText(rs.getString("WeeksCredit"));
                daysToNextDelivery = rs.getInt("DaysToNextDelivery");
                daysNumber = rs.getInt("D");
            }
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(OrderCreate.class.getName()).log(Level.SEVERE, null, ex);
        }
        Calendar c = Calendar.getInstance();
        int currentDay = c.get(Calendar.DAY_OF_WEEK);
        String s = c.getDisplayName(Calendar.DAY_OF_WEEK, Calendar.LONG,
                Locale.getDefault());
        //work out when this order will be delivered.
        int daysToDelivery = 0;
        boolean done = false;
        for (int i = currentDay; i < 8; i++) {
            //calculate days to next delivery
            if ((daysNumber & (1 << (i - 1))) != 0) {
                //delivery that day
                daysToDelivery = i - currentDay;
                done = true;
                break;
            }
        }
        if (!done) {
            //try beginning of week but add on days from previous week
            daysToDelivery = 7 - currentDay; //days from first week
            for (int i = 1; i < currentDay + 1; i++) {
                //calculate days to next delivery
                if ((daysNumber & (1 << (i - 1))) != 0) {
                    //delivery that day
                    daysToDelivery += i + 1;
                    break;
                }
            }
        }
        done = false;
        s = c.getDisplayName(Calendar.DAY_OF_WEEK, Calendar.LONG,
                Locale.getDefault());
        String t=c.toString();
        c.add(Calendar.DAY_OF_MONTH, daysToDelivery);
        s=c.getDisplayName(Calendar.DAY_OF_WEEK, Calendar.LONG, Locale.getDefault());
        s = c.getDisplayName(Calendar.DAY_OF_WEEK, Calendar.LONG,
                Locale.getDefault());
        deliveryDateChooser.setCalendar(c);
        //now find the next delivery after
        currentDay = c.get(Calendar.DAY_OF_WEEK);
        daysToDelivery = 0;
        for (int i = currentDay; i < 8; i++) {
            //calculate days to next delivery
            if ((daysNumber & (1 << (i - 1))) != 0) {
                //delivery that day
                daysToDelivery = i - currentDay + 1;
                done = true;
                break;
            }
        }
        if (!done) {
            //try beginning of week but add on days from previous week
            daysToDelivery = 7 - currentDay; //days from first week
            for (int i = 1; i < currentDay + 1; i++) {
                //calculate days to next delivery
                if ((daysNumber & (1 << (i - 1))) != 0) {
                    //delivery that day
                    daysToDelivery += i + 1;
                    break;
                }
            }
        }
        if (daysToDelivery < daysToNextDelivery) {
            daysToDelivery = daysToNextDelivery;
        }
        c.add(Calendar.DAY_OF_MONTH, daysToDelivery);
        nextDeliveryDateChooser.setCalendar(c);
        daysSpareText.requestFocus();
        Audio.play("Tada");
        JRootPane rp = getRootPane();
        rp.setDefaultButton(okButton);
        setVisible(true);
    }

    private void daysSpareTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_daysSpareTextKeyReleased

}//GEN-LAST:event_daysSpareTextKeyReleased

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
}//GEN-LAST:event_closeButtonActionPerformed

    private void closeButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_closeButtonKeyReleased
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE) {
            Audio.play("Beep");
            this.setVisible(false);
        }
}//GEN-LAST:event_closeButtonKeyReleased

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
            setVisible(false);
            Audio.play("Beep");
            Main.salesScreen.greyOrdersMenu(false);            
            OrderGenerate orderGenerate = new OrderGenerate();
            orderGenerate.setup(supplier, deliveryDateChooser.getCalendar(),
                     nextDeliveryDateChooser.getCalendar());
             orderThread = new Thread(orderGenerate);
             orderThread.start();
             Audio.play("Beep");
    }//GEN-LAST:event_okButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                OrderCreate dialog = new OrderCreate(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField daysSpareText;
    private com.toedter.calendar.JDateChooser deliveryDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser nextDeliveryDateChooser;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField supplierText;
    private javax.swing.JTextField weeksCreditText;
    // End of variables declaration//GEN-END:variables

}
