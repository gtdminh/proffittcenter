/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PriceChange.java
 *
 * Created on 31-Aug-2009, 14:30:14
 */

package proffittcenter;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;

/**
 *
 * @author HP_Owner
 */
public class PriceChange extends EscapeDialog {
    private String description;
    private int price;
    private long barcode;
    private Preferences root = Preferences.userNodeForPackage(getClass());
    ResourceBundle deliveryEntryBundle = ResourceBundle.getBundle("proffittcenter/resource/DeliveryEntry");

    /** Creates new form PriceChange */
    public PriceChange(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getRootPane().setDefaultButton(okButton);
    }

    /**
     *
     * @param barcode
     */
    public void execute(long barcode){
        this.barcode=barcode;
        try {
            PreparedStatement productLookup = Main.getConnection().prepareStatement(
                    "SELECT Products.* " + "FROM Products" + " WHERE Products.ID=? ");
            productLookup.setLong(1, barcode);
            ResultSet rs = productLookup.executeQuery();
            if (!rs.first()) {
                rs.close();
            } else {
                description = rs.getString("Description");
                descriptionT.setText(description);
                price = rs.getInt("Price");
                oldPriceText.setText((new Money(price)).toString());
                rs.close();
                newPriceText.setText((new Money(price)).toString());
                newPriceText.requestFocus();
//                //FormRestore.createPosition(this, root);
                setVisible(true);
//                //FormRestore.destroyPosition(this, root);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PriceChange.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        oldPriceText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        newPriceText = new javax.swing.JTextField();
        closeButton2 = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        descriptionT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("proffittcenter/resource/PriceChange"); // NOI18N
        setTitle(bundle.getString("PriceChange.title")); // NOI18N
        setName("PriceChange"); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(bundle.getString("PriceChange.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        oldPriceText.setEditable(false);
        oldPriceText.setText(bundle.getString("PriceChange.oldPriceText.text")); // NOI18N
        oldPriceText.setName("oldPriceText"); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(bundle.getString("PriceChange.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        newPriceText.setText(bundle.getString("PriceChange.newPriceText.text")); // NOI18N
        newPriceText.setName("newPriceText"); // NOI18N
        newPriceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newPriceTextKeyReleased(evt);
            }
        });

        closeButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/Close24.png"))); // NOI18N
        closeButton2.setContentAreaFilled(false);
        closeButton2.setName("closeButton2"); // NOI18N
        closeButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButton2ActionPerformed(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/OK.png"))); // NOI18N
        okButton.setContentAreaFilled(false);
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        descriptionT.setEditable(false);
        descriptionT.setText(bundle.getString("PriceChange.descriptionT.text")); // NOI18N
        descriptionT.setName("descriptionT"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(oldPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(newPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(descriptionT))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(descriptionT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(oldPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(newPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {closeButton2, okButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButton2ActionPerformed
        setVisible(false);
}//GEN-LAST:event_closeButton2ActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        try {
            if(StringOps.numericOnly(newPriceText.getText()).isEmpty()){
                newPriceText.requestFocus();
                return;
            }
            PreparedStatement productSave = Main.getConnection().prepareStatement(
                    "UPDATE Products SET Price=? WHERE ID=?");
            price=Integer.parseInt(StringOps.numericOnly(newPriceText.getText()));
//            if(price==0) {
//                return;
//            }
            productSave.setInt(1,price);
            productSave.setLong(2, barcode);
            productSave.execute();
            Audio.play("Beep");
            if(price !=0){
                int response=JOptionPane.showConfirmDialog(this, deliveryEntryBundle.getString("ShelfEdgeLabel"),
                                deliveryEntryBundle.getString("Information"),
                                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
                if(response == JOptionPane.YES_OPTION){
                    int linesToBePrinted = 4;
                    int linesSeperatingPrintAndCut = 6;
                    int shelfEdgeLabelHeight = Main.hardware.getShelfEdgeLabelHeight() - Main.hardware.getExtraLines();
                    int blankLinesBeforePrinting = (shelfEdgeLabelHeight - linesToBePrinted) / 2 + Main.hardware.getExtraLines() - linesSeperatingPrintAndCut;
                    blankLinesBeforePrinting = blankLinesBeforePrinting < 0 ? 0 : blankLinesBeforePrinting;
                    int blankLinesAfterPrinting = (shelfEdgeLabelHeight - linesToBePrinted) / 2 - blankLinesBeforePrinting - Main.hardware.getExtraLines() + linesSeperatingPrintAndCut;
                    Main.receiptPrinter.selectPrinter();
                    //Main.receiptPrinter.selectPrinter();
                    for (int i = 0; i < blankLinesBeforePrinting; i++) {
                        Main.receiptPrinter.printLine("");
                    }
                    String s1 = description;
                    Main.receiptPrinter.printLargeCentralLine(s1);
                    s1 = (new Money(price).toString());
                    Main.receiptPrinter.printLargeCentralLine(s1);
                    for (int i = 0; i < blankLinesAfterPrinting; i++) {
                        Main.receiptPrinter.printLine(" ");
                    }
                    Main.receiptPrinter.endPrinter();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(PriceChange.class.getName()).log(Level.SEVERE, null, ex);
            Audio.play("Ring");
        }
        setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void newPriceTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPriceTextKeyReleased
        Money.asMoney(newPriceText);
    }//GEN-LAST:event_newPriceTextKeyReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PriceChange dialog = new PriceChange(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton2;
    private javax.swing.JTextField descriptionT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField newPriceText;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField oldPriceText;
    // End of variables declaration//GEN-END:variables

}
