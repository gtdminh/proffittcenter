/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewPackSupplier.java
 *
 * Created on 22-Jul-2009, 20:56:34
 */
package proffittcenter;

import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.JRootPane;

/**
 *
 * @author HP_Owner
 */
public class NewPackSupplier extends EscapeDialog {

    private int packPrice;
    Preferences root = Preferences.userNodeForPackage(getClass());
    private String packCode;
    private String casePrice;
    private int supplier;
    private int price;
    private int pack;
    private int packSupplier;
    private int caseSize;
    private long product;
    private int suggestedCasePrice;
    private int margin;
    private int encoded;
    private int size;
    private int rate;

    /** Creates new form NewPackSupplier
     * @param parent
     * @param modal  
     */
    public NewPackSupplier(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        JRootPane rp = getRootPane();
        rp.setDefaultButton(okButton);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCasePrice = new javax.swing.JTextField();
        jPackCode = new javax.swing.JLabel();
        jSupplier = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        jTextField2.setText("jTextField2");
        jTextField2.setName("jTextField2"); // NOI18N

        jTextField3.setText("jTextField3");
        jTextField3.setName("jTextField3"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("proffittcenterworkingcopy/resource/NewPackSupplier"); // NOI18N
        setTitle(bundle.getString("title")); // NOI18N
        setName("NewPackSupplier"); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(bundle.getString("jLabel1")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(bundle.getString("jLabel2")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText(bundle.getString("jLabel3")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jCasePrice.setName("jCasePrice"); // NOI18N
        jCasePrice.setNextFocusableComponent(okButton);
        jCasePrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jCasePriceFocusLost(evt);
            }
        });
        jCasePrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCasePriceKeyReleased(evt);
            }
        });

        jPackCode.setText("jLabel4");
        jPackCode.setName("jPackCode"); // NOI18N

        jSupplier.setText("jLabel5");
        jSupplier.setName("jSupplier"); // NOI18N

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenterworkingcopy/resource/OK.png"))); // NOI18N
        okButton.setContentAreaFilled(false);
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        okButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                okButtonFocusGained(evt);
            }
        });

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenterworkingcopy/resource/Close24.png"))); // NOI18N
        closeButton.setContentAreaFilled(false);
        closeButton.setDefaultCapable(false);
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        closeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                closeButtonKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSupplier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPackCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCasePrice, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jPackCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSupplier))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jCasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {closeButton, okButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        String s=StringOps.numericOnly(jCasePrice.getText());
        if (s.isEmpty()) {//no price
            Audio.play("Ring");
            jCasePrice.requestFocus();
            return;
        }
        price = Integer.parseInt(s);
        casePrice = s;
        // Save the new packSupplier
        try {
            PreparedStatement np = Main.getConnection().prepareStatement(
                    "INSERT INTO " +
                    " PackSuppliers(ID,Pack,Price,Supplier) VALUES(?,?,?,?)");
            np.setNull(1, Types.INTEGER);//ID
            np.setInt(2, pack);
            np.setInt(3, price);
            np.setInt(4, supplier);
            np.executeUpdate();
            PreparedStatement np1 = Main.getConnection().prepareStatement(
                    "SELECT LAST_INSERT_ID() FROM PackSuppliers");
            ResultSet rs = np1.executeQuery();
            rs.first();
            packSupplier = rs.getInt(1);
            rs.close();
        } catch (SQLException ex) {
            Audio.play("Ring");
            Logger.getLogger(NewPackSupplier.class.getName()).log(Level.SEVERE, null, ex); 
            return;
        }
        Audio.play("Beep");
        setVisible(false);
}//GEN-LAST:event_okButtonActionPerformed

    int execute(String packCode,int supplier) {
        try {
            this.packCode = packCode;
            this.supplier=supplier;
            Audio.play("Tada");
            jPackCode.setText(packCode);
            PreparedStatement ps = Main.getConnection().prepareStatement(
                    "SELECT Packs.* FROM Packs WHERE Packs.Code=?");
            ps.setString(1, packCode);
            ResultSet rs = ps.executeQuery();
            jCasePrice.setText("");
            if (rs.first()) {
                pack=rs.getInt("ID");
                caseSize = rs.getInt("Size");
                product = rs.getLong("product");
                rs.close();
                //we need previous packSupplier
                String fps ="SELECT Packs.Size,Products.Price,Departments.Margin, "
                        + "Products.Encoded,Taxes.Rate "
                        + "FROM Packs,Products,Skus,Departments,Taxes "
                        + "WHERE Packs.Product=? AND Packs.Product=Products.ID "
                        + "AND Products.Sku=Skus.ID AND Skus.Department=Departments.ID "
                        + "AND Skus.Tax=Taxes.ID "
                        + "ORDER BY Packs.WhenCreated DESC";
                ps=Main.getConnection().prepareStatement(fps);
                ps.setLong(1, product);
                rs=ps.executeQuery();
                Regime rr = Main.shop.regimeIs();
                if(rs.first()){
                    margin = rs.getInt("Margin");
                    encoded = rs.getInt("Encoded");
                    suggestedCasePrice=0;
                    size = rs.getInt("Packs.Size");
                    price =rs.getInt("Price");
                    rate=rs.getInt("Rate");
                    if(encoded==NewProduct.ENCODEBYWEIGHTPARITY || encoded==NewProduct.ENCODEBYWEIGHTNOPARITY){
                        suggestedCasePrice=(size*price*(10000-margin))/10000;
                    } else {
                        suggestedCasePrice=price*size*(10000-margin)/(10000);//not same case size, maybe 
                    }
                    if (rr == Regime.NONE || rr == Regime.REGISTERED || rr == Regime.UNREGISTERED) {
                        suggestedCasePrice = (suggestedCasePrice * 10000+500) / (10000 + rate );
                    } else if (rr == Regime.WHOLESALE || rr == Regime.SALESTAX) {
                        //no change
                    }
                    jCasePrice.setText(new Money(suggestedCasePrice).toString());
                }else{
                    jCasePrice.setText("");
                }
                ps.close();
                ps=Main.getConnection().prepareStatement("SELECT Description FROM Suppliers WHERE ID=?");
                ps.setInt(1, supplier);
                rs=ps.executeQuery();
                if(rs.next()){
                    jSupplier.setText(rs.getString("Suppliers.Description"));
                }
                ps.close();
            } else {//no linked pack!
                rs.close();
            }
            jCasePrice.requestFocus();
            setVisible(true);
            return packSupplier;
        } catch (SQLException ex) {
            Audio.play("Ring");
            Logger.getLogger(NewPackSupplier.class.getName()).log(Level.SEVERE, null, ex);
        }
        return -1;
    }

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
}//GEN-LAST:event_closeButtonActionPerformed

    private void closeButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_closeButtonKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            Audio.play("Beep");
            this.setVisible(false);
        }
}//GEN-LAST:event_closeButtonKeyReleased

    private void jCasePriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jCasePriceFocusLost
        
    }//GEN-LAST:event_jCasePriceFocusLost

    private void jCasePriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCasePriceKeyReleased
        Money.asMoney(jCasePrice);
    }//GEN-LAST:event_jCasePriceKeyReleased

    private void okButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_okButtonFocusGained
        String s=StringOps.numericOnly(jCasePrice.getText());
        if (s.isEmpty()) {//no price
            jCasePrice.setText("");
            Audio.play("Ring");
            return;
        }
        price = Integer.parseInt(s);
        jCasePrice.setText((new Money(price)).toString());
    }//GEN-LAST:event_okButtonFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NewPackSupplier dialog = new NewPackSupplier(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField jCasePrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jPackCode;
    private javax.swing.JLabel jSupplier;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
