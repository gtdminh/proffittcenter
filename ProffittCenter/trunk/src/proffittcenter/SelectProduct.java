/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SelectProductN.java
 *
 * Created on 14-Mar-2009, 19:33:29
 */

package proffittcenter;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.prefs.Preferences;
import javax.swing.JRootPane;

/**
 *
 * @author HP_Owner
 */
public class SelectProduct extends EscapeDialog {

    Preferences root = Preferences.userNodeForPackage(getClass());
    private int selectedSku;
    private Long barcode;
    private String data;

    /** Creates new form SelectProductN */
    public SelectProduct(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        JRootPane rp = getRootPane();
        rp.setDefaultButton(okBtn);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        barCodeEntry = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("proffittcenter/resource/SelectProduct"); // NOI18N
        setTitle(bundle.getString("title")); // NOI18N
        setName("SelectProduct"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        okBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/OK.png"))); // NOI18N
        okBtn.setContentAreaFilled(false);
        okBtn.setName("okBtn"); // NOI18N
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/Close24.png"))); // NOI18N
        closeButton.setContentAreaFilled(false);
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        closeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                closeButtonKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(359, Short.MAX_VALUE)
                .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {closeButton, okBtn});

        jLabel2.setText("Product: scan or type...");
        jLabel2.setName("jLabel2"); // NOI18N

        barCodeEntry.setName("barCodeEntry"); // NOI18N
        barCodeEntry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                barCodeEntryFocusLost(evt);
            }
        });
        barCodeEntry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                barCodeEntryKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(barCodeEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barCodeEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    long execute() {
        Audio.play("Tada");
        //select a product, return an sku
        barCodeEntry.setText("");
        barCodeEntry.requestFocus();
        barcode=0l;
        setVisible(true);
        return barcode;
    }

    Long executeProduct() {
        Audio.play("Tada");
        //select a product
        int i = 0, j = 0;
        this.setVisible(true);
        return barcode;
    }

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
         ok();
}//GEN-LAST:event_okBtnActionPerformed

    private void ok(){
        if(data.length()==1&&(data.charAt(0)>='a'||data.charAt(0)<='z'|| data.charAt(0) >= 'A' && data.charAt(0) <= 'Z')){
            //data is a hot key
            int n = 1; //n is the multiplyer, default to 1
            data = data.toUpperCase();
            char c = data.charAt(0);
            barcode = c - 65L + 1000001L;
            data = ""+barcode;
        }
        barcode=0L;
        data=StringOps.numericOnly(data);
        if (data.length() >= 7) {
            barcode = Long.parseLong(data);
            checkProduct();
            this.setVisible(false);
        }
        this.setVisible(false);
    }

    private void barCodeEntryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barCodeEntryKeyReleased
        data = barCodeEntry.getText();
        if(data.length()==3){
            if(Main.alphaLookup.isBarcode(data)){
                return;
            }
            if(Main.alphaLookup.isFound(data)){
                String s=Main.alphaLookup.returnDataIs();
                barCodeEntry.setText(Main.alphaLookup.returnDataIs());
                data=s;
                barcode=Long.parseLong(s);
                ok();
                this.setVisible(false);
            } else {
                barCodeEntry.setText("");
            }
        }
}//GEN-LAST:event_barCodeEntryKeyReleased

    private void barCodeEntryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barCodeEntryFocusLost
       if(!barCodeEntry.getText().isEmpty()){
            ok();
        }
    }//GEN-LAST:event_barCodeEntryFocusLost

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
}//GEN-LAST:event_closeButtonActionPerformed

    private void closeButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_closeButtonKeyReleased

}//GEN-LAST:event_closeButtonKeyReleased

    private void checkProduct() {
        PreparedStatement query;
        try {
            query = Main.getConnection().prepareStatement(
                    "SELECT Skus.ID," +
                    "Skus.WhenCreated " +
                    "FROM Products,Skus " +
                    "WHERE Products.ID=? " +
                    "AND Products.Sku=Skus.ID " +
                    "ORDER BY Skus.WhenCreated DESC");
            query.setLong(1, barcode);
            ResultSet rs;
            rs = query.executeQuery();
            if (rs.first()) {//not if empty
                selectedSku = rs.getInt("Skus.ID");
            } else {
                barcode = 0L;
                selectedSku = 0;
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return;
    }
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SelectProduct dialog = new SelectProduct(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barCodeEntry;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okBtn;
    // End of variables declaration//GEN-END:variables

    int getSku() {
        return selectedSku;
    }

}
