/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Tracks.java
 *
 * Created on 18-Sep-2010, 16:15:21
 */

package proffittcenter;

import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowSorter;

/**
 *
 * @author Dave
 */
public class Tracks extends javax.swing.JDialog {

    ResourceBundle bundle = ResourceBundle.getBundle("proffittcenter/resource/Tracks");
    private JDBCTableModel jtm;
    private String tracks="SELECT Sales.ID AS Sale,Sales.WhenCreated AS Date, "
            + "SaleLines.Price AS Price,SaleLines.Track AS Track, "
            + "Products.Description AS Product "
            + "FROM Sales,SaleLines,Products "
            + "WHERE SaleLines.Sale=Sales.ID "
            + "AND Products.ID=SaleLines.Product "
            + "AND SaleLines.Track <>''  "
            + "AND (Sales.Customer LIKE ? OR SaleLines.Track LIKE ?)";
    private int selection;
    private long sale;
    private String code;
    private int id;
    private long customer;
    
    /** Creates new form Tracks */
    public Tracks(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Main.mainHelpBroker.enableHelpKey(getRootPane(), "Tracking", Main.mainHelpSet);
    }

    /** This method is called from within the constructor to
     * initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        customerTextField = new javax.swing.JTextField();
        infoButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("proffittcenter/resource/Tracks"); // NOI18N
        setTitle(bundle.getString("Title")); // NOI18N
        setName("Tracks"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        customerTextField.setName("customerTextField"); // NOI18N
        customerTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customerTextFieldKeyReleased(evt);
            }
        });

        infoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/Info.png"))); // NOI18N
        infoButton.setBorder(null);
        infoButton.setName("infoButton"); // NOI18N
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenter/resource/OK.png"))); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("Tracks.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(bundle.getString("Tracks.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        idTextField.setName("idTextField"); // NOI18N
        idTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idTextFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(infoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(infoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                        .addComponent(okButton, 0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(customerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customerTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerTextFieldKeyReleased
     idTextField.setText("");
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            selection = jTable1.getSelectedRow() - 1;
            if (selection >= 0) {
                jTable1.setRowSelectionInterval(selection, selection);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            selection = jTable1.getSelectedRow() + 1;
            int i = jTable1.getRowCount() - 1;
            if (selection < jTable1.getRowCount()) {
                jTable1.setRowSelectionInterval(selection, selection);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ADD || evt.getKeyCode() == KeyEvent.VK_EQUALS) {
            customerTextField.setText("");
            if (Main.settingsTab.isOwnerManager()) {
                int op = Main.operator.getOperator();//needed to clear temporary operator
    //            Main.customer.setLocationRelativeTo(this);
                boolean b = Main.customer.execute(-1l,false);
                //FormRestore.destroyPosition(this, root);
                drawGrid();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_I && evt.isControlDown()) {
            customerTextField.setText("");
            selection = jTable1.getSelectedRow();
            if (selection == -1) {//no selected row
                return;
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            selection=jTable1.convertRowIndexToModel(selection);
            sale = (Long) jTable1.getModel().getValueAt(selection, 0);
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            drawGrid();
        }else if(evt.getKeyCode() != KeyEvent.VK_ESCAPE){ 
                drawGrid();
        }else {
            setVisible(false);
        }
    }//GEN-LAST:event_customerTextFieldKeyReleased

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
            selection = jTable1.getSelectedRow();
    if (selection == -1) {//no selected row
        return;
    }
    selection = jTable1.convertRowIndexToModel(selection);
    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    id = (Integer) jTable1.getModel().getValueAt(selection, 0);
//    Main.customer.setLocationRelativeTo(this);
    Main.sale1.execute(id, 0, false, 0,false,false);
    //FormRestore.destroyPosition(this, root);
    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    drawGrid();
    }//GEN-LAST:event_infoButtonActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        customerTextField.requestFocus();
    }//GEN-LAST:event_jTable1MouseReleased

private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    if(customerTextField.getText().isEmpty()){
        customer=Main.customers.execute("ByName", false);
        if(customer!=10000380000L){
            customerTextField.setText(""+customer);
        }
        drawGrid();
    }
}//GEN-LAST:event_okButtonActionPerformed

private void idTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextFieldKeyReleased
    customerTextField.setText("");
    drawGrid();
}//GEN-LAST:event_idTextFieldKeyReleased

    public void execute(){
        Audio.play("TaDa");
        customerTextField.setText("");
        drawGrid();
        customerTextField.requestFocus();
        setVisible(true);
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Tracks dialog = new Tracks(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField customerTextField;
    private javax.swing.JTextField idTextField;
    private javax.swing.JButton infoButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private void drawGrid() {
        try {
            RowSorter sorter = jTable1.getRowSorter();
            PreparedStatement ps = Main.getConnection().prepareStatement(tracks);
            code = customerTextField.getText();
            if(code.isEmpty()){
                ps.setString(1, code);
            } else {
                ps.setString(1, code+'%');
            }
            String idString = idTextField.getText();
            if(idString.isEmpty()){
                ps.setString(2,idString);
            }else {
                ps.setString(2,idString+'%');
            }
            HashSet  editable=new HashSet();
            jtm = new JDBCTableModel( ps, bundle, jTable1,editable);
//            customerTextField.requestFocus();
            jTable1.setRowSorter(sorter);
        } catch (SQLException ex) {
            Audio.play("Ring");
            Logger.getLogger(Deliveries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
