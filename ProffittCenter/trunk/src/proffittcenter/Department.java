/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DepartmentEscape.java
 *
 * Created on 28-Oct-2009, 17:54:17
 */
package proffittcenter;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.ResourceBundle;
import java.util.prefs.Preferences;
import javax.swing.JRootPane;

/**
 *
 * @author HP_Owner
 */
public class Department extends EscapeDialog {

    Preferences root = Preferences.userNodeForPackage(getClass());
    static ResourceBundle bundle = ResourceBundle.getBundle("proffittcenterworkingcopy/resource/Department");
    String oldDescription;

    /** Creates new form DepartmentEscape */
    public Department(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Main.mainHelpBroker.enableHelpKey(getRootPane(), "Department", Main.mainHelpSet);
        JRootPane rp = getRootPane();
        rp.setDefaultButton(okButton);
    }

    boolean execute(String department) {
        try {
            this.department = department;
            PreparedStatement taxQuery =
                    Main.getConnection().prepareStatement(
                            "SELECT Description FROM TAXES ORDER BY ID");
            ResultSet rst = taxQuery.executeQuery();
            jTaxComboBox.removeAllItems();
            while (rst.next()) {
                jTaxComboBox.addItem(rst.getString("Description"));
            }
            rst.close();
            PreparedStatement departmentQuery =
                    Main.getConnection().prepareStatement(
                    "SELECT Description FROM Suppliers " + "ORDER BY Description");
            ResultSet rs = departmentQuery.executeQuery();
            supplierComboBox1.removeAllItems();
            while (rs.next()) {
                //suppliers to display
                String S = rs.getString("Description");
                supplierComboBox1.addItem(S);
            }
            departmentQuery.close();
            if (department.isEmpty()) {
                //create a new record
                updating = false;
                jId.setText("");
                jDescription.setText("");
                jTaxComboBox.setSelectedItem("");
                jMargin.setText("20.00%");
                minimumSpinner.setValue(0);
                oldDescription = "";
                jRestriction.setText("");
            } else {
                //lookup old record
                updating = true;
                try {
                    PreparedStatement lu;
                    lu = Main.getConnection().prepareStatement("SELECT Departments.*,Taxes.*,Suppliers.Description AS S FROM Departments,Taxes,Suppliers WHERE Departments.ID=? AND Taxes.ID=Departments.Tax AND  Suppliers.ID=Departments.Supplier ORDER BY WhenCreated");
                    lu.setString(1, department);
                    rs = lu.executeQuery();
                    if (rs.last()) {
                        jDescription.setText(rs.getString("Departments.Description"));
                        oldDescription=rs.getString("Departments.Description");
                        jId.setText(rs.getString("Departments.ID"));
                        jTaxComboBox.setSelectedItem(rs.getString("Taxes.Description"));
                        int m = rs.getInt("Departments.Margin");
                        jMargin.setText(new PerCent(m).toString()+"%");
                        minimumSpinner.setValue(rs.getInt("Departments.Minimum"));
                        jRestriction.setText(rs.getString("Restriction").trim());
                        supplierComboBox1.setSelectedItem(rs.getString("S"));
                    }
                    lu.close();
                } catch (SQLException ex) {
                    Audio.play("Ring");
                    ex.printStackTrace();
                }
            }
            Audio.play("Tada");
            jDescription.requestFocus();
            jDescription.selectAll();
            //FormRestore.createPosition(this, root);
            setVisible(true);
            //FormRestore.destroyPosition(this, root);
            return true;
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jId = new javax.swing.JTextField();
        jDescription = new javax.swing.JTextField();
        jTaxComboBox = new javax.swing.JComboBox();
        supplierComboBox1 = new javax.swing.JComboBox();
        jMargin = new javax.swing.JTextField();
        jRestriction = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        minimumSpinner = new javax.swing.JSpinner();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("proffittcenterworkingcopy/resource/Department"); // NOI18N
        setTitle(bundle.getString("title")); // NOI18N
        setName("Department"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(bundle.getString("Department.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText(bundle.getString("Department.jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(bundle.getString("Department.jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jId.setEditable(false);
        jId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jId.setName("jId"); // NOI18N

        jDescription.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jDescription.setName("jDescription"); // NOI18N
        jDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jDescriptionFocusLost(evt);
            }
        });
        jDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jDescriptionKeyReleased(evt);
            }
        });

        jTaxComboBox.setName("jTaxComboBox"); // NOI18N

        supplierComboBox1.setName("supplierComboBox1"); // NOI18N

        jMargin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jMargin.setName("jMargin"); // NOI18N
        jMargin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jMarginFocusLost(evt);
            }
        });
        jMargin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jMarginKeyReleased(evt);
            }
        });

        jRestriction.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jRestriction.setName("jRestriction"); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText(bundle.getString("Department.jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText(bundle.getString("Department.jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText(bundle.getString("Department.jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(bundle.getString("Department.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        minimumSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        minimumSpinner.setName("minimumSpinner"); // NOI18N
        minimumSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                minimumSpinnerFocusLost(evt);
            }
        });

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenterworkingcopy/resource/OK.png"))); // NOI18N
        okButton.setContentAreaFilled(false);
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        okButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                okButtonKeyReleased(evt);
            }
        });

        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proffittcenterworkingcopy/resource/Close24.png"))); // NOI18N
        cancelButton.setContentAreaFilled(false);
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 218, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(supplierComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(minimumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(443, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 222, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 222, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 222, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 222, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jId, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                .addComponent(jDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                .addComponent(jRestriction, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTaxComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 222, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jMargin, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplierComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73)
                .addComponent(minimumSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(okButton, 0, 0, Short.MAX_VALUE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                    .addGap(3, 3, 3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(jDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(9, 9, 9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTaxComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(60, 60, 60)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jMargin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRestriction, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addContainerGap()))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDescription, jMargin, jTaxComboBox, supplierComboBox1});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        description = StringOps.firstCaps(jDescription.getText());
        tax = (String) jTaxComboBox.getSelectedItem();
        margin = StringOps.numericOnly(jMargin.getText());
        minimum = (Integer) minimumSpinner.getValue();
        if (jDescription.getText().isEmpty()) {
            //set focus back to descriptionTextField
            jDescription.requestFocus();
            Audio.play("Ring");
            return;
        } else if (tax.isEmpty()) {
            //set focus back to jTax
            jTaxComboBox.requestFocus();
            Audio.play("Ring");
            return;
        } else if (jMargin.getText().isEmpty()) {
            //set focus back to jMargin
            jMargin.requestFocus();
            Audio.play("Ring");
            return;
        } else {
            try{
                String duplicates="SELECT ID FROM Departments WHERE Description=?";
                PreparedStatement ps=Main.getConnection().prepareStatement(duplicates);
                ps.setString(1, description);
                ResultSet rs=ps.executeQuery();
                if(rs.first()&&!updating  ){
                    //there is a duplicate
                    jDescription.setText("");
                    jDescription.requestFocus();
                    Audio.play("Ring");
                    rs.close();
                    return;
                }
                rs.close();
            } catch (SQLException ex){
                ex.printStackTrace();
                return;
            }
        }
        //need to save all reults
        try {
            saveData();
        } catch (SQLException ex) {
            Audio.play("Ring");
            ex.printStackTrace();
        }
        setVisible(false);
}//GEN-LAST:event_okButtonActionPerformed

    private void saveData() throws SQLException {
        Audio.play("Beep");
        if (tax.isEmpty()) {
            tax = bundle.getString("Default");
        }
        if (updating) {
            PreparedStatement ps = Main.getConnection().prepareStatement(
                    "UPDATE Departments SET Description=?,Tax=(SELECT ID FROM Taxes WHERE Taxes.Description=?),margin=?,minimum=?,Restriction=?,Supplier=(SELECT ID FROM Suppliers WHERE Description=?) WHERE ID=? AND id!=1");
            ps.setString(1, description);
            tax = (String) jTaxComboBox.getSelectedItem();
            ps.setString(2, tax);
            ps.setString(3, margin);
            ps.setInt(4, minimum);
            jRestriction.setText(jRestriction.getText().trim().toUpperCase()+"  ");//add two spaces
            ps.setString(5, jRestriction.getText().substring(0, 2));
            ps.setString(6, (String) supplierComboBox1.getSelectedItem());
            ps.setString(7, jId.getText());
            ps.executeUpdate();
            ps.close();
        } else {
            PreparedStatement ps = Main.getConnection().prepareStatement(
                    "INSERT INTO Departments (ID,Description,Tax,Margin,Minimum,Restriction,Supplier) VALUES(?,?,(SELECT ID FROM Taxes WHERE Taxes.Description=?),?,?,?,(SELECT ID FROM Suppliers WHERE Suppliers.Description=?))");
            ps.setNull(1, Types.INTEGER);
            ps.setString(2, description);
            ps.setString(3, (String) jTaxComboBox.getSelectedItem());
            ps.setString(4, margin);
            ps.setInt(5, minimum);
            jRestriction.setText(jRestriction.getText().trim()+"  ");
            ps.setString(6, jRestriction.getText().toUpperCase().substring(0, 2));
            String s = (String) supplierComboBox1.getSelectedItem();
            ps.setString(7, (String) supplierComboBox1.getSelectedItem());
            ps.executeUpdate();
            ps.close();
        }
    }

    private void okButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_okButtonKeyReleased
//        if (StringOps.nextComponent(evt, okButton, okButton)) {
//            AudioPlayer.play("Beep");
//            description = StringOps.firstCaps(jDescription.getText());
//            tax = StringOps.numericOnly((String) jTaxComboBox.getSelectedItem());
//            margin = StringOps.numericOnly(jMargin.getText());
//            minimum = (Integer) minimumSpinner.getValue();
//            if (jDescription.getText().isEmpty()) {
//                //set focus back to descriptionTextField
//                jDescription.requestFocus();
//                return;
//            } else if (tax.isEmpty()) {
//                //set focus back to jTax
//                jTaxComboBox.requestFocus();
//                return;
//            } else if (jMargin.getText().isEmpty()) {
//                //set focus back to jMargin
//                jMargin.requestFocus();
//                return;
//            }
//            //need to save all reults
//            try {
//                saveData();
//            } catch (SQLException ex) {
//                ex.printStackTrace();
//            }
//        }
//        setVisible(false);
}//GEN-LAST:event_okButtonKeyReleased

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
}//GEN-LAST:event_cancelButtonActionPerformed

    private void jDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDescriptionFocusLost
        jDescription.setText(StringOps.firstCaps(jDescription.getText().trim()));
}//GEN-LAST:event_jDescriptionFocusLost

    private void jMarginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jMarginFocusLost
        margin = StringOps.numericOnly(jMargin.getText());
    }//GEN-LAST:event_jMarginFocusLost

    private void minimumSpinnerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_minimumSpinnerFocusLost
        minimum = (Integer) minimumSpinner.getValue();
    }//GEN-LAST:event_minimumSpinnerFocusLost

    private void jDescriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDescriptionKeyReleased
        //limit here to 30 characters
        int len = jDescription.getText().length();
        if(len>30){
            jDescription.setText(jDescription.getText().substring(0, 30));
            Audio.play("Ring");
        }
    }//GEN-LAST:event_jDescriptionKeyReleased

    private void jMarginKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jMarginKeyReleased
        PerCent.asPerCent(jMargin);
    }//GEN-LAST:event_jMarginKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Department dialog = new Department(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField jDescription;
    private javax.swing.JTextField jId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jMargin;
    private javax.swing.JTextField jRestriction;
    private javax.swing.JComboBox jTaxComboBox;
    private javax.swing.JSpinner minimumSpinner;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox supplierComboBox1;
    // End of variables declaration//GEN-END:variables
    private boolean updating = false;
    private String department;
    private String description;
    private String margin;
    private Integer minimum;
    private String tax;
}
