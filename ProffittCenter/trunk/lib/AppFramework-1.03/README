
NetBeans project for the JSR 296 Application Framework API
implementation prototype.

This code comes from the AppFramework java.net project:
https://appframework.dev.java.net/ Go there for documentation, news,
updates, email aliases, and so on.  If you have questions or feedback
about the API, please subscribe to the AppFramework users mailing list
and send your feedback there:
https://appframework.dev.java.net/servlets/ProjectMailingListList (The
users email alias is the last one, all the way at the bottom.)

The code is organized as a NetBeans project and it's been built for
JDK 1.5, so you should be able to try things out without additional
fuss.  A few points of interest in the hiearchy:

COPYING - announces that the code is LGPL
src/application - the framework itself
src/application/examples - a few small examples
dist/AppFramework.jar - the implementation (sans examples)
dist/javadoc/index.html - the javadoc (sans examples)
lib/swing-worker.jar - SwingWorker class for 1.5
test/application - JUnit tests; very spotty coverage


* Building the Source Code

The NetBeans project should build correctly on Windows and OSX.  

In addition to the 1.5 JDK, the build depends on the 1.5 backport of
SwingWorker which was downloaded from
https://swingworker.dev.java.net/ and has been copied into the CVS,
lib/swing-worker.jar, as a binary file.  The build also depends on
javaws.jar, the JNLP API, at compile time.  This file is distributed
with the JDK, it's ${java.home}/lib/javaws.jar on Windows and on OSX
it's:
/Applications/Utilities/Java/Java\ Web\ Start.app/Contents/MacOS/javaws.jar 

The javaws.jar file isn't needed at run-time and is included 
automatically by the Java Web Start launcher.  The pathname for javaws.jar
is specified in nbproject/project.properties, see jnlp.classpath and
osx.jnlp.classpath.  If you're using another IDE, you may need to 
add javaws.jar to the compile-time classpath manually.







